(function() {var implementors = {};
implementors["chalk_engine"] = [{"text":"impl&lt;'i, I:&nbsp;Interner&gt; Folder&lt;'i, I&gt; for DeepNormalizer&lt;'_, 'i, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: 'i,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["chalk_ir"] = [];
implementors["chalk_solve"] = [{"text":"impl&lt;'i, I:&nbsp;Interner&gt; Folder&lt;'i, I&gt; for Generalize&lt;'i, I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'i, I:&nbsp;Interner&gt; Folder&lt;'i, I&gt; for Canonicalizer&lt;'i, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: 'i,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'i, I:&nbsp;Interner&gt; Folder&lt;'i, I&gt; for Inverter&lt;'i, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: 'i,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'i, I:&nbsp;Interner&gt; Folder&lt;'i, I&gt; for UMapToCanonical&lt;'i, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: 'i,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'i, I:&nbsp;Interner&gt; Folder&lt;'i, I&gt; for UMapFromCanonical&lt;'i, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: 'i,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'i, I:&nbsp;Interner&gt; Folder&lt;'i, I&gt; for OccursCheck&lt;'_, 'i, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: 'i,&nbsp;</span>","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()