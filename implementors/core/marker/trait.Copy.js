(function() {var implementors = {};
implementors["chalk_derive"] = [{"text":"impl Copy for DeriveKind","synthetic":false,"types":[]}];
implementors["chalk_engine"] = [{"text":"impl Copy for StackIndex","synthetic":false,"types":[]},{"text":"impl Copy for AnswerIndex","synthetic":false,"types":[]},{"text":"impl Copy for TableIndex","synthetic":false,"types":[]},{"text":"impl Copy for TimeStamp","synthetic":false,"types":[]},{"text":"impl Copy for Minimums","synthetic":false,"types":[]},{"text":"impl Copy for AnswerMode","synthetic":false,"types":[]}];
implementors["chalk_integration"] = [{"text":"impl Copy for RawId","synthetic":false,"types":[]},{"text":"impl Copy for ChalkFnAbi","synthetic":false,"types":[]},{"text":"impl Copy for ChalkIr","synthetic":false,"types":[]},{"text":"impl Copy for TypeSort","synthetic":false,"types":[]},{"text":"impl Copy for Unit","synthetic":false,"types":[]},{"text":"impl Copy for SolverChoice","synthetic":false,"types":[]}];
implementors["chalk_ir"] = [{"text":"impl Copy for Void","synthetic":false,"types":[]},{"text":"impl Copy for NoSolution","synthetic":false,"types":[]},{"text":"impl Copy for Variance","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Interner&gt; Copy for Environment&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedProgramClauses: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;G:&nbsp;HasInterner&lt;Interner = I&gt; + Copy, I:&nbsp;Interner&gt; Copy for InEnvironment&lt;G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedProgramClauses: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Copy for IntTy","synthetic":false,"types":[]},{"text":"impl Copy for UintTy","synthetic":false,"types":[]},{"text":"impl Copy for FloatTy","synthetic":false,"types":[]},{"text":"impl Copy for Scalar","synthetic":false,"types":[]},{"text":"impl Copy for Safety","synthetic":false,"types":[]},{"text":"impl Copy for Mutability","synthetic":false,"types":[]},{"text":"impl Copy for UniverseIndex","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Copy + Interner&gt; Copy for AdtId&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedAdtId: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Copy + Interner&gt; Copy for TraitId&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::DefId: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Copy + Interner&gt; Copy for ImplId&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::DefId: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Copy + Interner&gt; Copy for ClauseId&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::DefId: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Copy + Interner&gt; Copy for AssocTypeId&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::DefId: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Copy + Interner&gt; Copy for OpaqueTyId&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::DefId: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Copy + Interner&gt; Copy for FnDefId&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::DefId: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Copy + Interner&gt; Copy for ClosureId&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::DefId: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Copy + Interner&gt; Copy for GeneratorId&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::DefId: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Copy + Interner&gt; Copy for ForeignDefId&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::DefId: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Copy + Interner&gt; Copy for Ty&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedType: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Copy for TypeFlags","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Interner&gt; Copy for TyKind&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedLifetime: Copy,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedSubstitution: Copy,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedVariableKinds: Copy,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedQuantifiedWhereClauses: Copy,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedType: Copy,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedConst: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Copy for BoundVar","synthetic":false,"types":[]},{"text":"impl Copy for DebruijnIndex","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Interner&gt; Copy for DynTy&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedLifetime: Copy,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedQuantifiedWhereClauses: Copy,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedVariableKinds: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Copy for InferenceVar","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Copy + Interner&gt; Copy for FnSig&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::FnAbi: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Interner&gt; Copy for FnSubst&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedSubstitution: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Interner&gt; Copy for FnPointer&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedSubstitution: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Copy + Interner&gt; Copy for Const&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedConst: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Interner&gt; Copy for ConstValue&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedConcreteConst: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Copy + Interner&gt; Copy for ConcreteConst&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedConcreteConst: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Copy + Interner&gt; Copy for Lifetime&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedLifetime: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Copy + Interner&gt; Copy for LifetimeData&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl Copy for PlaceholderIndex","synthetic":false,"types":[]},{"text":"impl Copy for TyVariableKind","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Interner&gt; Copy for VariableKind&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedType: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Copy + Interner&gt; Copy for GenericArg&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedGenericArg: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Interner&gt; Copy for GenericArgData&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedType: Copy,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedLifetime: Copy,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedConst: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Interner, T:&nbsp;Copy&gt; Copy for WithKind&lt;I, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedType: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Interner&gt; Copy for AliasTy&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedSubstitution: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Interner&gt; Copy for ProjectionTy&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedSubstitution: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Interner&gt; Copy for OpaqueTy&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedSubstitution: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Interner&gt; Copy for TraitRef&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedSubstitution: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Interner&gt; Copy for LifetimeOutlives&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedLifetime: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Interner&gt; Copy for TypeOutlives&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedLifetime: Copy,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedType: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Interner&gt; Copy for WhereClause&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedSubstitution: Copy,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedLifetime: Copy,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedType: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Interner&gt; Copy for WellFormed&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedType: Copy,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedSubstitution: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Interner&gt; Copy for FromEnv&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedType: Copy,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedSubstitution: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Interner&gt; Copy for DomainGoal&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedSubstitution: Copy,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedLifetime: Copy,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedType: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Interner&gt; Copy for EqGoal&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedGenericArg: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Interner&gt; Copy for SubtypeGoal&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedType: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Interner&gt; Copy for Normalize&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedSubstitution: Copy,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedType: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Interner&gt; Copy for AliasEq&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedSubstitution: Copy,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedType: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;HasInterner + Copy&gt; Copy for Binders&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T::Interner as Interner&gt;::InternedVariableKinds: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Copy for ClausePriority","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Copy + Interner&gt; Copy for ProgramClause&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedProgramClause: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Copy + Interner&gt; Copy for Goal&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedGoal: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Interner&gt; Copy for GoalData&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedType: Copy,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedLifetime: Copy,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedGenericArg: Copy,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedSubstitution: Copy,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedGoal: Copy,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedGoals: Copy,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedProgramClauses: Copy,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedVariableKinds: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Copy for QuantifierKind","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Interner&gt; Copy for Constraint&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedLifetime: Copy,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedType: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Copy + Interner&gt; Copy for QuantifiedWhereClauses&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedQuantifiedWhereClauses: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Copy + Interner&gt; Copy for ProgramClauses&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedProgramClauses: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Copy + Interner&gt; Copy for VariableKinds&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedVariableKinds: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Copy + Interner&gt; Copy for CanonicalVarKinds&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedCanonicalVarKinds: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Copy + Interner&gt; Copy for Goals&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedGoals: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Copy + Interner&gt; Copy for Constraints&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedConstraints: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Copy + Interner&gt; Copy for Substitution&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedSubstitution: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Copy + Interner&gt; Copy for Variances&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedVariances: Copy,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["chalk_parse"] = [{"text":"impl Copy for Span","synthetic":false,"types":[]},{"text":"impl Copy for Movability","synthetic":false,"types":[]},{"text":"impl Copy for AdtKind","synthetic":false,"types":[]},{"text":"impl Copy for WellKnownTrait","synthetic":false,"types":[]},{"text":"impl Copy for Kind","synthetic":false,"types":[]},{"text":"impl Copy for IntTy","synthetic":false,"types":[]},{"text":"impl Copy for UintTy","synthetic":false,"types":[]},{"text":"impl Copy for FloatTy","synthetic":false,"types":[]},{"text":"impl Copy for ScalarType","synthetic":false,"types":[]},{"text":"impl Copy for Mutability","synthetic":false,"types":[]},{"text":"impl Copy for Safety","synthetic":false,"types":[]},{"text":"impl Copy for Variance","synthetic":false,"types":[]}];
implementors["chalk_recursive"] = [{"text":"impl Copy for NegativeSolution","synthetic":false,"types":[]},{"text":"impl Copy for DepthFirstNumber","synthetic":false,"types":[]},{"text":"impl Copy for StackDepth","synthetic":false,"types":[]},{"text":"impl Copy for Minimums","synthetic":false,"types":[]}];
implementors["chalk_solve"] = [{"text":"impl Copy for SpecializationPriority","synthetic":false,"types":[]},{"text":"impl Copy for InvertedBoundVar","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Copy + Interner&gt; Copy for UnifiedId&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedAdtId: Copy,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::DefId: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Copy + Interner&gt; Copy for EnaVariable&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Copy + Interner&gt; Copy for RecordedItemId&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Copy + Interner&gt; Copy for AssociatedTyValueId&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::DefId: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Copy for ImplType","synthetic":false,"types":[]},{"text":"impl Copy for AdtKind","synthetic":false,"types":[]},{"text":"impl Copy for WellKnownTrait","synthetic":false,"types":[]},{"text":"impl Copy for Movability","synthetic":false,"types":[]},{"text":"impl Copy for Polarity","synthetic":false,"types":[]},{"text":"impl Copy for ClosureKind","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()