(function() {var implementors = {};
implementors["chalk_engine"] = [{"text":"impl PartialOrd&lt;StackIndex&gt; for StackIndex","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;AnswerIndex&gt; for AnswerIndex","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;TableIndex&gt; for TableIndex","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;TimeStamp&gt; for TimeStamp","synthetic":false,"types":[]}];
implementors["chalk_integration"] = [{"text":"impl PartialOrd&lt;RawId&gt; for RawId","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;ChalkIr&gt; for ChalkIr","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;TypeSort&gt; for TypeSort","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;SolverChoice&gt; for SolverChoice","synthetic":false,"types":[]}];
implementors["chalk_ir"] = [{"text":"impl PartialOrd&lt;Void&gt; for Void","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;NoSolution&gt; for NoSolution","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;IntTy&gt; for IntTy","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;UintTy&gt; for UintTy","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;FloatTy&gt; for FloatTy","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;Scalar&gt; for Scalar","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;Safety&gt; for Safety","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;Mutability&gt; for Mutability","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;UniverseIndex&gt; for UniverseIndex","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;PartialOrd + Interner&gt; PartialOrd&lt;AdtId&lt;I&gt;&gt; for AdtId&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedAdtId: PartialOrd,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;PartialOrd + Interner&gt; PartialOrd&lt;TraitId&lt;I&gt;&gt; for TraitId&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::DefId: PartialOrd,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;PartialOrd + Interner&gt; PartialOrd&lt;ImplId&lt;I&gt;&gt; for ImplId&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::DefId: PartialOrd,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;PartialOrd + Interner&gt; PartialOrd&lt;ClauseId&lt;I&gt;&gt; for ClauseId&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::DefId: PartialOrd,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;PartialOrd + Interner&gt; PartialOrd&lt;AssocTypeId&lt;I&gt;&gt; for AssocTypeId&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::DefId: PartialOrd,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;PartialOrd + Interner&gt; PartialOrd&lt;OpaqueTyId&lt;I&gt;&gt; for OpaqueTyId&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::DefId: PartialOrd,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;PartialOrd + Interner&gt; PartialOrd&lt;FnDefId&lt;I&gt;&gt; for FnDefId&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::DefId: PartialOrd,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;PartialOrd + Interner&gt; PartialOrd&lt;ClosureId&lt;I&gt;&gt; for ClosureId&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::DefId: PartialOrd,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;PartialOrd + Interner&gt; PartialOrd&lt;GeneratorId&lt;I&gt;&gt; for GeneratorId&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::DefId: PartialOrd,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;PartialOrd + Interner&gt; PartialOrd&lt;ForeignDefId&lt;I&gt;&gt; for ForeignDefId&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::DefId: PartialOrd,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;PartialOrd + Interner&gt; PartialOrd&lt;Ty&lt;I&gt;&gt; for Ty&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedType: PartialOrd,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;TypeFlags&gt; for TypeFlags","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;BoundVar&gt; for BoundVar","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;DebruijnIndex&gt; for DebruijnIndex","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;InferenceVar&gt; for InferenceVar","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;PartialOrd + Interner&gt; PartialOrd&lt;Const&lt;I&gt;&gt; for Const&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedConst: PartialOrd,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;PartialOrd + Interner&gt; PartialOrd&lt;ConcreteConst&lt;I&gt;&gt; for ConcreteConst&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedConcreteConst: PartialOrd,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;PartialOrd + Interner&gt; PartialOrd&lt;Lifetime&lt;I&gt;&gt; for Lifetime&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedLifetime: PartialOrd,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;PartialOrd + Interner&gt; PartialOrd&lt;LifetimeData&lt;I&gt;&gt; for LifetimeData&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;PlaceholderIndex&gt; for PlaceholderIndex","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;PartialOrd + Interner&gt; PartialOrd&lt;GenericArg&lt;I&gt;&gt; for GenericArg&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedGenericArg: PartialOrd,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;PartialOrd + Interner&gt; PartialOrd&lt;ProgramClause&lt;I&gt;&gt; for ProgramClause&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedProgramClause: PartialOrd,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;PartialOrd + Interner&gt; PartialOrd&lt;Goal&lt;I&gt;&gt; for Goal&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedGoal: PartialOrd,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;QuantifierKind&gt; for QuantifierKind","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;PartialOrd + Interner&gt; PartialOrd&lt;QuantifiedWhereClauses&lt;I&gt;&gt; for QuantifiedWhereClauses&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedQuantifiedWhereClauses: PartialOrd,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;PartialOrd + Interner&gt; PartialOrd&lt;ProgramClauses&lt;I&gt;&gt; for ProgramClauses&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedProgramClauses: PartialOrd,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;PartialOrd + Interner&gt; PartialOrd&lt;VariableKinds&lt;I&gt;&gt; for VariableKinds&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedVariableKinds: PartialOrd,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;PartialOrd + Interner&gt; PartialOrd&lt;CanonicalVarKinds&lt;I&gt;&gt; for CanonicalVarKinds&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedCanonicalVarKinds: PartialOrd,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;PartialOrd + Interner&gt; PartialOrd&lt;Goals&lt;I&gt;&gt; for Goals&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedGoals: PartialOrd,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;PartialOrd + Interner&gt; PartialOrd&lt;Constraints&lt;I&gt;&gt; for Constraints&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedConstraints: PartialOrd,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;PartialOrd + Interner&gt; PartialOrd&lt;Substitution&lt;I&gt;&gt; for Substitution&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedSubstitution: PartialOrd,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;PartialOrd + Interner&gt; PartialOrd&lt;Variances&lt;I&gt;&gt; for Variances&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedVariances: PartialOrd,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["chalk_recursive"] = [{"text":"impl PartialOrd&lt;DepthFirstNumber&gt; for DepthFirstNumber","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;StackDepth&gt; for StackDepth","synthetic":false,"types":[]}];
implementors["chalk_solve"] = [{"text":"impl PartialOrd&lt;SpecializationPriority&gt; for SpecializationPriority","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;InvertedBoundVar&gt; for InvertedBoundVar","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;PartialOrd + Interner&gt; PartialOrd&lt;UnifiedId&lt;I&gt;&gt; for UnifiedId&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::InternedAdtId: PartialOrd,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::DefId: PartialOrd,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;PartialOrd + Interner&gt; PartialOrd&lt;EnaVariable&lt;I&gt;&gt; for EnaVariable&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, DefId:&nbsp;PartialOrd, AdtId:&nbsp;PartialOrd&gt; PartialOrd&lt;OrderedItemId&lt;'a, DefId, AdtId&gt;&gt; for OrderedItemId&lt;'a, DefId, AdtId&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Interner&gt; PartialOrd&lt;RecordedItemId&lt;I&gt;&gt; for RecordedItemId&lt;I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;PartialOrd + Interner&gt; PartialOrd&lt;AssociatedTyValueId&lt;I&gt;&gt; for AssociatedTyValueId&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I::DefId: PartialOrd,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;WellKnownTrait&gt; for WellKnownTrait","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;Polarity&gt; for Polarity","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;ClosureKind&gt; for ClosureKind","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()